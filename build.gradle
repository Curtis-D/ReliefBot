apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'application'


repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

buildscript {
    ext.kotlin_version = '1.2.31'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

dependencies {
    // Fetch the framework jar file
    compile 'org.rlbot.commons:framework:0.0.1'

    // Fetch the framework zip file
    compile 'org.rlbot.commons:framework:0.0.1:python@zip'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'com.intellij', name: 'forms_rt', version: '7.0.3'
    compile group: 'org.ode4j', name: 'core', version: '0.3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    compile 'com.google.guava:guava:23.4-jre'

    // This picks up the dll since it's in this directory. Doesn't work if you specify the dll by name.
    runtime files('build/framework/RLBotFramework/dll')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
}

mainClassName = 'tarehart.rlbot.ReliefBotMainKt'

// You can run gradew distZip to generate a zip file suitable for tournament submissions
distZip {
    into ('README') {
        from 'README_Tournament.md'
        from fileTree('src/main/python') {
            exclude '__pycache__'
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def findFile(suffix) {
    configurations.compile.filter { it.name.endsWith(suffix) }
}

// Extracts the RLBot framework zip into a directory in ./build/framework so it can be used by the bot.
task prepareFrameworkDirectory(type: Copy) {
    from zipTree(findFile('python.zip').singleFile)
    into 'build/framework'
}

// Uses pip (the python package manager) to install all the python packages needed for this bot, as defined
// in requirements.txt.
task pipInstallRequirements(type: Exec) {
    commandLine "pip", "install", "-r", "build/framework/requirements.txt"
    commandLine "pip", "install", "-r", "src/main/python/requirements.txt"
}

// Installs or updates RLBot. Empty task for now. It still does stuff because it "dependsOn" tasks that do things.
task updateRLBot
updateRLBot.dependsOn pipInstallRequirements
updateRLBot.dependsOn prepareFrameworkDirectory

// Must prepare the framework directory before running pip because the requirements.txt file references another one
// inside the framework directory.
pipInstallRequirements.dependsOn prepareFrameworkDirectory
