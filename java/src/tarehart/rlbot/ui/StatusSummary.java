package tarehart.rlbot.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import tarehart.rlbot.Bot;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class StatusSummary {
    private JPanel rootPanel;
    private JButton blueBtn;
    private JLabel blueStatus;
    private JLabel orangeStatus;
    private JButton orangeBtn;
    private JLabel portLbl;
    private JPanel bluePanel;
    private JPanel orangePanel;

    private Map<Bot.Team, JFrame> debugPanels = new HashMap<>();

    public StatusSummary() {

        blueStatus.setText("Asleep");
        orangeStatus.setText("Asleep");

        blueBtn.addActionListener(e -> showDebugForm(Bot.Team.BLUE));
        orangeBtn.addActionListener(e -> showDebugForm(Bot.Team.ORANGE));
    }

    public void showDebugForm(Bot.Team team) {
        JFrame frame = debugPanels.get(team);
        frame.pack();
        frame.setVisible(true);
    }

    public void markTeamRunning(Bot.Team team, JFrame debugPanel) {

        JLabel status;
        JPanel statusPnl;
        Color color;
        JButton btn;

        if (team == Bot.Team.BLUE) {
            status = blueStatus;
            statusPnl = bluePanel;
            color = new Color(187, 212, 255);
            btn = blueBtn;
        } else {
            status = orangeStatus;
            statusPnl = orangePanel;
            color = new Color(250, 222, 191);
            btn = orangeBtn;
        }

        status.setText("Running");
        statusPnl.setBackground(color);
        btn.setEnabled(true);

        debugPanels.put(team, debugPanel);
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public void setPort(int port) {
        portLbl.setText(String.format("Port %s", port));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(4, 4, new Insets(5, 5, 5, 5), -1, -1));
        blueBtn = new JButton();
        blueBtn.setEnabled(false);
        blueBtn.setText("Debug");
        rootPanel.add(blueBtn, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(167, 22), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Blue");
        rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Orange");
        rootPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        orangeBtn = new JButton();
        orangeBtn.setEnabled(false);
        orangeBtn.setText("Debug");
        rootPanel.add(orangeBtn, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(167, 22), null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        portLbl = new JLabel();
        portLbl.setText("Label");
        rootPanel.add(portLbl, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rootPanel.add(spacer2, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        rootPanel.add(spacer3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        bluePanel = new JPanel();
        bluePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 5, 0, 5), -1, -1));
        rootPanel.add(bluePanel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        blueStatus = new JLabel();
        blueStatus.setText("Label");
        bluePanel.add(blueStatus, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        orangePanel = new JPanel();
        orangePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 5, 0, 5), -1, -1));
        rootPanel.add(orangePanel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        orangeStatus = new JLabel();
        orangeStatus.setText("Label");
        orangePanel.add(orangeStatus, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
